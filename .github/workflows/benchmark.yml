name: Algorithm Performance Benchmarks

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]
  # Allow manual triggering
  workflow_dispatch:
  # Run weekly to track long-term changes
  schedule:
    - cron: '0 0 * * 0'  # Run at midnight on Sunday

jobs:
  benchmark:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch all history for all branches and tags
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -e .
        
    - name: Run benchmarks
      run: |
        mkdir -p benchmark-results
        python -m benchmarks.benchmark_algorithms all
        mv *.png benchmark-results/ 2>/dev/null || true
        
    - name: Upload benchmark results
      uses: actions/upload-artifact@v4
      with:
        name: benchmark-results
        path: benchmark-results/
        
    - name: Store benchmark result
      uses: benchmark-action/github-action-benchmark@v1
      with:
        name: Algorithm Performance Benchmarks
        tool: 'customBiggerIsBetter'
        output-file-path: benchmark-results/benchmark_summary.json
        github-token: ${{ secrets.GITHUB_TOKEN }}
        auto-push: true
        # Alert threshold:
        alert-threshold: '150%'
        comment-on-alert: true
        fail-on-alert: true
        # GitHub pages branch to store benchmark results
        gh-pages-branch: gh-pages
        
    - name: Check for performance regression
      id: check-regression
      run: |
        if [ -f benchmark-results/regression_detected.txt ]; then
          echo "regression=true" >> $GITHUB_OUTPUT
          echo "::warning::Performance regression detected!"
        else
          echo "regression=false" >> $GITHUB_OUTPUT
        fi

    # Create GitHub issue for significant regressions
    - name: Create GitHub issue for regression
      if: steps.check-regression.outputs.regression == 'true'
      uses: JasonEtco/create-an-issue@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        filename: .github/REGRESSION_ISSUE_TEMPLATE.md
        update_existing: true
        search_existing: open
